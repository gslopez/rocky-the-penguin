---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@/components/BaseHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { Icon } from "astro-icon/components";

type Props = CollectionEntry<"blog">["data"];

const {
  title = "",
  description,
  pubDate,
  updatedDate,
  heroImage = "/src/assets/about.jpg",
  icon,
  tags,
} = Astro.props;
import { getCollection } from "astro:content";
const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const bgClasses = [
  "hover:shadow-icebluehover",
  "hover:shadow-glacialhover",
  "hover:shadow-penguinhover",
  "hover:shadow-frost",

];
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}')
if (!images[heroImage]) throw new Error(`"${heroImage}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);

const getRandomClass = () => {
  return bgClasses[Math.floor(Math.random() * bgClasses.length)];
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body>
    <Header />
    <main class="container mx-auto md:px-10 text-white">
      <article >
        <div class="relative mb-20" transition:animate="fade">
          <span class="bg-black bg-opacity-25 w-full h-full absolute"></span>
          <div class="absolute bottom-10 md:left-20 left-6">
            <h1 class="text-4xl md:text-9xl font-semibold text-shadow">
              <span class="font-kablamo text-arctic">{title.charAt(0)}</span>{
                title.slice(1)
              }
            </h1>
            <p  set:html={description} />
          </div>
          <Image src={images[heroImage]()}  alt={title} class="h-96 w-full object-cover"/>
        </div>
        <div class="text-xs text-gray-500 text-center -mt-4 mb-4">
          {heroImage === '/src/assets/hero.jpg' && (
            <p>Photo by <a href="https://www.pexels.com/photo/adelie-penguin-on-rocky-antarctic-shoreline-31308007/" target="_blank" rel="noopener noreferrer" class="hover:text-deepocean">ArcticDesire.com Polarreisen</a></p>
          )}
          {heroImage === '/src/assets/about.jpg' && (
            <p>Photo by <a href="https://www.pexels.com/photo/penguins-on-an-iceberg-10837810/" target="_blank" rel="noopener noreferrer" class="hover:text-deepocean">Frans van Heerden</a></p>
          )}
          {heroImage === '/src/assets/meteorite.jpg' && (
            <p>Photo by <a href="https://www.pexels.com/photo/a-shooting-star-in-the-night-sky-6629838/" target="_blank" rel="noopener noreferrer" class="hover:text-deepocean">Alberto Calleja</a></p>
          )}
          {heroImage === '/src/assets/rainbow.jpg' && (
            <p>Photo by <a href="https://www.pexels.com/photo/bright-rainbow-over-rippling-sea-5707731/" target="_blank" rel="noopener noreferrer" class="hover:text-deepocean">Ben Mack</a></p>
          )}
        </div>
        <div class="text-black px-6 md:px-0">
          <div class="">
            <div class="text-sm text-pblack flex items-center justify-between">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
              {icon === 'seal' && <Image src={images["/src/assets/seal.png"]()} alt="Seal" class="w-12 h-12" transition:animate="fade" />}
              {icon === 'rainbow' && <Image src={images["/src/assets/rainbow.png"]()} alt="Rainbow" class="w-12 h-12" transition:animate="fade" />}
              {icon === 'comet' && <Image src={images["/src/assets/comet.png"]()} alt="Comet" class="w-12 h-12" transition:animate="fade" />}
              {!['seal', 'rainbow', 'comet'].includes(icon) && <Icon name={icon} class="text-5xl" transition:animate="fade" />}
            </div>

            <hr />
          </div>
          <div class="flex justify-between py-10 md:flex-row flex-col">
            <div class="prose md:w-1/2 flex flex-col gap-6">
              <slot />
            </div>
            <div class="flex flex-col gap-6" transition:animate="slide">
              <ul class="flex flex-col gap-2 pt-10 md:pt-0 items-start md:items-end">
                <p class="md:hidden font-semibold">Related:</p>
                {
                  posts.map((post) => {
                    return (
                      <li class=`text-left rounded-lg border-1 border-black shadow-card group hover:shadow-hover transition  px-2 py-2 ${getRandomClass()}` >
                        <a
                          href={`/blog/${post.id}/`}
                        >
                          <h4 >{post.data.title}</h4>
                        </a>
                      </li>
                    );
                  })
                }
              </ul>
              <hr />
              <p>Written by</p>
              <div class="flex -mt-4 gap-2">
                  <div class="bg-glacial rounded-full w-12 h-12 aspect-square object-contain overflow-hidden ">
                    <Image style={{ height: "100%" }} src={images["/src/assets/hero.jpg"]()} alt="Rocky" />
                  </div>
                  <div>
                  <h3>Rocky the Penguin</h3>
                  <p class="text-pblack">Rock collector from<br>Cape Adare, Antarctica</p>
                </div>
              </div>
              <hr/>
            </div>
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
